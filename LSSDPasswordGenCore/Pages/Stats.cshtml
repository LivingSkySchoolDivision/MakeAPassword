@page
@using LSSDPasswordGenerators.Generators;
@model LSSDPasswordGenCore.StatsModel
@{
    Layout = null;

    ComplexPasswordGenerator complexGen = new ComplexPasswordGenerator();
    WordBasedPasswordGenerator wordGen = new WordBasedPasswordGenerator();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Stats</title>    
</head>
<body>
    <h1>Stats</h1>
    <p>This system generates passwords of varying complexity. It will generate <i>some</i> medium-complexity passwords from a much smaller word list, for users with smaller vocabularies.</p>
    <p>Passwords are generated based on a minimum number of characters, so some passwords may have more words than others.</p>
    
    <h2>Medium complexity word passwords</h2>
    <ul>
        <li>Word list contains @String.Format("{0:n0}", wordGen.WordsInWordList(PasswordComplexity.Medium)) words and @wordGen.SeparatorCount() separator words/characters.</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.Medium, 2)) possible <b>two word</b> passwords that could be generated</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.Medium, 3)) possible <b>three word</b> passwords that could be generated</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.Medium, 4)) possible <b>four word</b> passwords that could be generated</li>
    </ul>

    <h2>High complexity word passwords</h2>
    <ul>
        <li>Word list contains @String.Format("{0:n0}", wordGen.WordsInWordList(PasswordComplexity.High)) words and @wordGen.SeparatorCount() separator words/characters.</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.High, 2)) possible <b>two word</b> passwords that could be generated</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.High, 3)) possible <b>three word</b> passwords that could be generated</li>
        <li>There are @String.Format("{0:n0}", wordGen.PotentialCombinations(PasswordComplexity.High, 4)) possible <b>four word</b> passwords that could be generated</li>
    </ul>

</body>
</html>
